{"version":3,"sources":["components/shared/Button.tsx","locale/index.ts","components/shared/screenReaderOnlyStyle.ts","components/AddTodo/AddTodo.tsx","components/TodoItem/RemoveTodoButton.tsx","components/TodoItem/CompleteTodoButton.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/NoTodos.tsx","components/TodoList/TodoList.tsx","model/actions.ts","model/Todo.ts","model/reducer.ts","App/useTodos.ts","App/App.tsx","index.tsx"],"names":["ButtonColor","ButtonType","en","Button","children","color","onClick","type","colorStyles","Alert","border","borderRadius","boxShadow","backgroundColor","Success","style","padding","screenReaderOnlyStyle","position","left","top","width","height","overflow","AddTodo","onAdd","useState","todoText","setTodoText","todoInputId","onSubmit","event","preventDefault","display","gridTemplateColumns","gap","htmlFor","marginRight","id","onChange","target","value","Submit","RemoveTodoButton","props","icon","faTrash","CompleteTodoButton","faCheck","TodoItem","todo","completed","description","onComplete","onRemove","textDecoration","textOverflow","whiteSpace","flexDirection","justifyContent","NoTodos","alignItems","faSmileBeam","size","TodoActionType","TodoList","todos","onCompleteTodo","onDeleteTodo","length","map","Todo","uuid","todosReducer","action","payload","CompleteTodo","DeleteTodo","filter","useTodos","initialTodos","useReducer","dispatch","addTodo","newTodo","createAddTodoAction","completeTodo","createCompleteTodoAction","deleteTodo","createDeleteTodoAction","TodoApp","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.7a62efb2.chunk.js","sourcesContent":["import React, { FunctionComponent, ReactNode } from \"react\";\n\nexport enum ButtonColor {\n  Alert = \"Alert\",\n  Success = \"Success\",\n}\n\nexport enum ButtonType {\n  Submit = \"submit\",\n  Reset = \"reset\",\n  Button = \"button\",\n}\n\nexport interface Props {\n  children: ReactNode;\n  color: ButtonColor;\n  onClick?: () => void;\n  type?: ButtonType;\n}\n\nexport const Button: FunctionComponent<Props> = ({\n  children,\n  color,\n  onClick,\n  type,\n}) => {\n  const colorStyles = {\n    [ButtonColor.Alert]: {\n      border: \"#b33 solid 1px\",\n      borderRadius: \"4px\",\n      boxShadow: \"2px 2px 2px rgba(100,0,0,0.8)\",\n      color: \"white\",\n      backgroundColor: \"#a00\",\n    },\n    [ButtonColor.Success]: {\n      border: \"#3b3 solid 1px\",\n      borderRadius: \"4px\",\n      boxShadow: \"2px 2px 2px rgba(0,100,0,0.8)\",\n      color: \"white\",\n      backgroundColor: \"#0a0\",\n    },\n  };\n  return (\n    <button\n      style={{\n        ...colorStyles[color],\n        padding: \"0.2rem 0.5rem\",\n      }}\n      onClick={onClick}\n      type={type}\n    >\n      {children}\n    </button>\n  );\n};\n","export const en = {\n  markTodoAsCompleted: \"Mark as completed\",\n  removeTodo: \"Remove\",\n  noTodos: \"No todos left\",\n  newTodo: \"New todo\",\n  addTodo: \"Add todo\",\n  todoCompleted: \"Todo completed:\",\n};\n","// Based on https://webaim.org/techniques/css/invisiblecontent/\nexport const screenReaderOnlyStyle = {\n  position: \"absolute\",\n  left: \"-10000px\",\n  top: \"auto\",\n  width: \"1px\",\n  height: \"1px\",\n  overflow: \"hidden\",\n} as const;\n","import React, { FormEvent, FunctionComponent, useState } from \"react\";\nimport { en } from \"../../locale\";\nimport { Button, ButtonColor, ButtonType } from \"../shared\";\n\nexport interface Props {\n  onAdd: (description: string) => void;\n}\n\nexport const AddTodo: FunctionComponent<Props> = ({ onAdd }) => {\n  const [todoText, setTodoText] = useState(\"\");\n\n  function onSubmit(event: FormEvent) {\n    event.preventDefault();\n    onAdd(todoText);\n  }\n\n  const todoInputId = \"todoInput\";\n  return (\n    <form\n      onSubmit={onSubmit}\n      style={{\n        display: \"grid\",\n        gridTemplateColumns: \"max-content auto max-content\",\n        gap: \"1rem\",\n      }}\n    >\n      <label htmlFor={todoInputId} style={{ marginRight: \"0.5rem\" }}>\n        {en.newTodo}\n      </label>\n      <input\n        id={todoInputId}\n        onChange={(event) => setTodoText(event.target.value)}\n        style={{ width: \"100%\" }}\n        value={todoText}\n        type=\"text\"\n      />\n      <Button color={ButtonColor.Success} type={ButtonType.Submit}>\n        {en.addTodo}\n      </Button>\n    </form>\n  );\n};\n","import { Button, ButtonColor } from \"../shared/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { en } from \"../../locale\";\nimport React from \"react\";\n\nexport interface Props {\n  onClick: () => void;\n}\n\nexport function RemoveTodoButton(props: Props) {\n  return (\n    <Button color={ButtonColor.Alert} onClick={props.onClick}>\n      <FontAwesomeIcon icon={faTrash} onClick={props.onClick} /> {en.removeTodo}\n    </Button>\n  );\n}\n","import { Button, ButtonColor } from \"../shared/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { en } from \"../../locale\";\nimport React from \"react\";\n\nexport interface Props {\n  onClick: () => void;\n}\n\nexport function CompleteTodoButton(props: Props) {\n  return (\n    <Button color={ButtonColor.Success} onClick={props.onClick}>\n      <FontAwesomeIcon icon={faCheck} onClick={props.onClick} />{\" \"}\n      {en.markTodoAsCompleted}\n    </Button>\n  );\n}\n","import { RemoveTodoButton } from \"./RemoveTodoButton\";\nimport { CompleteTodoButton } from \"./CompleteTodoButton\";\nimport React, { FunctionComponent } from \"react\";\nimport { en } from \"../../locale\";\nimport { screenReaderOnlyStyle } from \"../shared/screenReaderOnlyStyle\";\nimport { Todo } from \"../../model/Todo\";\n\nexport interface Props {\n  todo: Todo;\n  onComplete: (id: Todo[\"id\"]) => void;\n  onRemove: (id: Todo[\"id\"]) => void;\n}\n\nexport const TodoItem: FunctionComponent<Props> = ({\n  todo: { id, completed, description },\n  onComplete,\n  onRemove,\n}) => (\n  <li\n    style={{\n      backgroundColor: \"white\",\n      border: \"solid 1px #eee\",\n      boxShadow: \"2px 2px 4px rgba(0,0,0,0.3)\",\n      display: \"grid\",\n      gap: \"1rem\",\n      gridTemplateColumns: \"auto max-content\",\n      padding: \"0.5rem\",\n    }}\n  >\n    <span\n      style={{\n        ...(completed ? { textDecoration: \"line-through\" } : {}),\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n      }}\n    >\n      {completed && (\n        <span style={screenReaderOnlyStyle}>{en.todoCompleted}</span>\n      )}\n      {description}\n    </span>\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        gap: \"1rem\",\n      }}\n    >\n      <RemoveTodoButton onClick={() => onRemove(id)} />\n      {!completed && <CompleteTodoButton onClick={() => onComplete(id)} />}\n    </div>\n  </li>\n);\n","import { en } from \"../../locale\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSmileBeam } from \"@fortawesome/free-solid-svg-icons\";\n\nexport function NoTodos() {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      <FontAwesomeIcon icon={faSmileBeam} size=\"2x\" />\n      <p>{en.noTodos}</p>\n    </div>\n  );\n}\n","import React, { FunctionComponent } from \"react\";\nimport { Todo } from \"../../model/Todo\";\nimport { TodoItem } from \"../TodoItem\";\nimport { NoTodos } from \"./NoTodos\";\n\nexport interface Props {\n  todos: Todo[];\n  onCompleteTodo: (id: Todo[\"id\"]) => void;\n  onDeleteTodo: (id: Todo[\"id\"]) => void;\n}\n\nexport const TodoList: FunctionComponent<Props> = ({\n  todos,\n  onCompleteTodo,\n  onDeleteTodo,\n}) => {\n  if (todos.length === 0) {\n    return <NoTodos />;\n  }\n  return (\n    <ul style={{ padding: 0 }}>\n      {todos.map((todo) => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          onRemove={() => onDeleteTodo(todo.id)}\n          onComplete={() => onCompleteTodo(todo.id)}\n        />\n      ))}\n    </ul>\n  );\n};\n","import { Todo } from \"./Todo\";\n\nexport enum TodoActionType {\n  AddTodo = \"AddTodo\",\n  CompleteTodo = \"CompleteTodo\",\n  DeleteTodo = \"DeleteTodo\",\n}\n\nexport function createAddTodoAction(description: string) {\n  const newTodo = new Todo(description);\n  return {\n    type: TodoActionType.AddTodo as const,\n    payload: newTodo,\n  };\n}\n\ntype AddTodoAction = ReturnType<typeof createAddTodoAction>;\n\nexport function createCompleteTodoAction(id: Todo[\"id\"]) {\n  return {\n    type: TodoActionType.CompleteTodo as const,\n    payload: {\n      id,\n    },\n  };\n}\n\ntype CompleteTodoAction = ReturnType<typeof createCompleteTodoAction>;\n\nexport function createDeleteTodoAction(id: Todo[\"id\"]) {\n  return {\n    type: TodoActionType.DeleteTodo as const,\n    payload: {\n      id,\n    },\n  };\n}\n\ntype DeleteTodoAction = ReturnType<typeof createDeleteTodoAction>;\nexport type TodoAction = AddTodoAction | CompleteTodoAction | DeleteTodoAction;\n","import { v4 as uuid } from \"uuid\";\n\nexport class Todo {\n  id = uuid();\n  completed = false;\n\n  constructor(public description: string) {}\n}\n","import { Todo } from \"./Todo\";\nimport { TodoAction, TodoActionType } from \"./actions\";\n\nexport function todosReducer(todos: Todo[], action: TodoAction) {\n  switch (action.type) {\n    case TodoActionType.AddTodo:\n      return [...todos, action.payload];\n    case TodoActionType.CompleteTodo:\n      return todos.map((todo) =>\n        todo.id === action.payload.id ? { ...todo, completed: true } : todo\n      );\n    case TodoActionType.DeleteTodo:\n      return todos.filter((todo) => todo.id !== action.payload.id);\n  }\n}\n","import { Todo } from \"../model/Todo\";\nimport { useReducer } from \"react\";\nimport { todosReducer } from \"../model/reducer\";\nimport {\n  createAddTodoAction,\n  createCompleteTodoAction,\n  createDeleteTodoAction,\n} from \"../model/actions\";\n\nexport function useTodos(initialTodos: Todo[]) {\n  const [todos, dispatch] = useReducer(todosReducer, initialTodos);\n  return {\n    todos,\n    addTodo: (description: string) =>\n      dispatch(createAddTodoAction(description)),\n    completeTodo: (id: Todo[\"id\"]) => dispatch(createCompleteTodoAction(id)),\n    deleteTodo: (id: Todo[\"id\"]) => dispatch(createDeleteTodoAction(id)),\n  };\n}\n","import React, { FunctionComponent } from \"react\";\nimport { AddTodo } from \"../components/AddTodo\";\nimport { TodoList } from \"../components/TodoList\";\nimport { useTodos } from \"./useTodos\";\n\nconst TodoApp: FunctionComponent = () => {\n  const { todos, addTodo, completeTodo, deleteTodo } = useTodos([]);\n\n  return (\n    <>\n      <TodoList\n        todos={todos}\n        onCompleteTodo={completeTodo}\n        onDeleteTodo={deleteTodo}\n      />\n      <AddTodo onAdd={addTodo} />\n    </>\n  );\n};\n\nexport default TodoApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}